// Generated by CoffeeScript 1.4.0
(function() {
  var callScriptOrLoad, loadEyes;

  callScriptOrLoad = function(tabid, request_type) {
    var resp;
    if (tabid == null) {
      tabid = null;
    }
    if (request_type == null) {
      request_type = "exists";
    }
    resp = null;
    try {
      return chrome.tabs.sendMessage(tabid, {
        type: request_type
      }, function(response) {
        resp = response;
        console.log("Message response");
        console.log(response);
        if (typeof response === "undefined") {
          return loadEyes(tabid);
        } else if (response.status === "success") {
          return console.log("Successfully performed: " + response.action);
        }
      });
    } catch (error) {
      return console.log(err);
    }
  };

  loadEyes = function(tabid) {
    if (tabid == null) {
      tabid = null;
    }
    chrome.tabs.insertCSS(tabid, {
      file: "css/googly.css"
    });
    return chrome.tabs.executeScript(tabid, {
      file: "js/inject.js"
    }, function() {
      console.log("Sending test message to " + tabid);
      return true;
    });
  };

  chrome.browserAction.onClicked.addListener(function(tab) {
    return chrome.tabs.query({
      active: true,
      currentWindow: true
    }, function(tabs) {
      var _i, _len, _results;
      _results = [];
      for (_i = 0, _len = tabs.length; _i < _len; _i++) {
        tab = tabs[_i];
        _results.push(callScriptOrLoad(tab.id, "add"));
      }
      return _results;
    });
  });

  chrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {
    chrome.storage.local.get(tab.url, function(data) {
      if (typeof data[tab.url] !== "undefined" && data[tab.url].length !== 0) {
        console.log("There's data for " + tab.url + "!");
        return callScriptOrLoad(tab.id);
      }
    });
    return true;
  });

  chrome.extension.onMessage.addListener(function(request, sender, sendResponse) {
    var key, save_input;
    if (request.task === "save") {
      save_input = {};
      save_input[sender.tab.url] = request.data;
      console.log("Save request from " + sender.tab.url);
      chrome.storage.local.set(save_input, function() {
        sendResponse({
          status: "success"
        });
        return true;
      });
    }
    if (request.task === "load") {
      key = sender.tab.url;
      console.log("Load request from " + key);
      chrome.storage.local.get(key, function(data) {
        var resp;
        resp = data[key];
        console.log('Loading...');
        sendResponse({
          status: "success",
          data: resp
        });
        return true;
      });
    }
    return true;
  });

}).call(this);
